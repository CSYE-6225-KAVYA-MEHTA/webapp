name: Packer Build CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: packer-build
    runs-on: ubuntu-latest

    env:
      MYSQL_USERNAME: ${{ secrets.DB_USERNAME }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.DB_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SUBNET_ID: ${{ secrets.SUBNET_ID }}
      SOURCE_AMI: ${{ secrets.SOURCE_AMI }}
      DEV_USER: ${{ secrets.DEV_USER }}
      DEMO_USER: ${{ secrets.DEMO_USER }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
      VPC_ID: ${{ secrets.VPC_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Packer
        uses: hashicorp/setup-packer@v2
        with:
          version: "1.9.4" # Using a more recent version

      - name: Debug Directory Structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -R
          echo "Packer directory contents:"
          ls -la packer/

      - name: Create Zip File
        run: |
          zip -r webapp.zip . -x "*.git*" "*node_modules*" "*logs*" "*temp*"

      - name: Create Packer Directory and Move Files
        run: |
          mkdir -p packer
          mv webapp.zip packer/
          cp img-creation.pkr.hcl packer/
          cp -r scripts packer/

      - name: Initialize Packer
        working-directory: ./packer
        run: |
          packer init .
          packer fmt -recursive .

      - name: Run Packer Build
        working-directory: ./packer
        run: |
          packer build \
            -var "aws_region=${{ env.AWS_REGION }}" \
            -var "subnet_id=${{ env.SUBNET_ID }}" \
            -var "source_ami=${{ env.SOURCE_AMI }}" \
            -var "dev_user=${{ env.DEV_USER }}" \
            -var "demo_user=${{ env.DEMO_USER }}" \
            -var "aws_access_key=${{ env.AWS_ACCESS_KEY }}" \
            -var "aws_secret_access_key=${{ env.AWS_SECRET_ACCESS_KEY }}" \
            -var "security_group_id=${{ env.SECURITY_GROUP_ID }}" \
            -var "vpc_id=${{ env.VPC_ID }}" \
            img-creation.pkr.hcl

      - name: Verify AMI Creation
        run: |
          aws ec2 describe-images \
            --owners self \
            --filters "Name=name,Values=CSYE6225*" \
            --query 'Images[*].[ImageId,State,CreationDate]' \
            --output table
