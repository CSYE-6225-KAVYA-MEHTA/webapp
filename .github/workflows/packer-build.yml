name: Packer Build CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: packer-build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Zip File
        run: |
          zip -r webapp.zip .
          cp webapp.zip packer/
          ls -la packer/

      - name: List Files
        run: ls -al

      - name: Upload Zip File
        uses: actions/upload-artifact@v4
        with:
          name: webapp zip creation
          path: webapp.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Run Packer
        run: |
          # Install Packer non-interactively
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install packer -y

          # Navigate to packer directory and run build
          ls
          cd packer
          packer init webapp.pkr.hcl

          packer build \
            -var "aws_region=${{ secrets.AWS_REGION }}" \
            -var "subnet_id=${{ secrets.SUBNET_ID }}" \
            -var "source_ami=${{ secrets.SOURCE_AMI }}" \
            -var "dev_user=${{ secrets.DEV_USER }}" \
            -var "demo_user=${{ secrets.DEMO_USER }}" \
            -var "security_group_id=${{ secrets.SECURITY_GROUP_ID }}" \
            -var "db_username=${{ secrets.DB_EC2_USER }}" \
            -var "db_password=${{ secrets.DB_PASSWORD }}" \
            -var "db_database=${{ secrets.DB_DATABASE }}" \
            -var "server_port=${{ secrets.PORT }}" \
            -var "db_host=${{ secrets.DB_HOST }}" \
            -var "gcp_zone=${{secrets.GCP_ZONE}}" \
            -var "ami_name_gcp=${{secrets.AMI_NAME_GCP}}" \
            img-creation.pkr.hcl
