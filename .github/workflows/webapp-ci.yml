name: WEBAPP CI

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps: # Moved steps outside services
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Debug MySQL Connection
        run: |
          echo "Checking MySQL connection..."
          mysql -h "127.0.0.1" -u"${{ secrets.DB_USERNAME }}" -p"${{ secrets.DB_PASSWORD }}" -e "SHOW DATABASES;" || true

      - name: Debug MySQL Secrets (No Passwords)
        run: |
          echo "DB_USER=${{ secrets.DB_USERNAME }}"
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}"
          echo "DB_HOST=localhost"
          echo "DB_ROOT_PASSWORD is set"

      - name: Ensure Database is Ready
        run: |
          echo "Waiting for MySQL to be fully ready..."
          for i in {1..10}; do
            mysql -h "127.0.0.1" -u"${{ secrets.DB_USERNAME }}" -p"${{ secrets.DB_PASSWORD }}" -e "SELECT 1" && break
            echo "MySQL not ready yet. Retrying in 5 seconds..."
            sleep 5
          done

      - name: Ensure `Checks` Table Exists
        run: |
          echo "Creating missing tables if necessary..."
          mysql -h "127.0.0.1" -u"${{ secrets.DB_USERNAME }}" -p"${{ secrets.DB_PASSWORD }}" -D "${{ secrets.DB_DATABASE }}" -e "
          CREATE TABLE IF NOT EXISTS Checks (
            checkId INT AUTO_INCREMENT PRIMARY KEY,
            datetime DATETIME NOT NULL
          ) ENGINE=InnoDB;
          SHOW TABLES;
          "

      - name: Configure Environment Variables
        run: |
          echo DB_USER=${{ secrets.DB_USERNAME }}
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          echo DB_NAME=${{ secrets.DB_DATABASE }}
          echo DB_HOST=localhost
          echo PORT=${{ secrets.PORT }}

      - name: Run tests
        env:
          DB_HOST: localhost
          PORT: ${{ secrets.PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
        run: npm test
